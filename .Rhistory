---
title: "Title of Report"
reg_data_final = data.frame()
# Goal is to have
reg_data_final = tibble()
library(tidyverse); theme_set(theme_bw())
# Goal is to have
reg_data_final = tibble()
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\all-primary-care-hpsas.xlsx"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data1 <- read_csv(path1)
data2 <- read_excel(path2)
print(c(dim(data1), dim(data2), dim(data3)))
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
library(tidyverse); theme_set(theme_bw())
library(readxl)
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\all-primary-care-hpsas.xlsx"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data3 <- read_csv(path3)
print(c(dim(data1), dim(data2), dim(data3)))
library(tidyverse); theme_set(theme_bw())
library(readxl)
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\all-primary-care-hpsas.xlsx"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_excel(path2)
library(tidyverse); theme_set(theme_bw())
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\all-primary-care-hpsas.csv"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_csv(path2)
data3 <- read_csv(path3)
print(c(dim(data1), dim(data2), dim(data3)))
names(data1)
names(data2)
names(data3)
glimpse(data1)
unique(data1$COUNTY)
glimpse(data1)
unique(data1$`Hospital Ratings`)
glimpse(data1)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
glimpse(data1)
glimpse(data1[, 1;5])
glimpse(data1[, 1:5])
glimpse(data1[, ])
glimpse(data1[, `:8])
glimpse(data1[, 1:9])
glimpse(data1[, 1:9])
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
glimpse(data1[, 1:9])
data1 <- read_csv(path1)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
glimpse(data1[, 1:9])
tibble(
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
) %>% knitr::kable()
data_dims <- tibble(
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
row_names(data_dims) <- c("Rows", "Columns")
data_dims %>% knitr::kable()
data_dims <- tibble(
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
row.names(data_dims) <- c("Rows", "Columns")
data_dims %>% knitr::kable()
data_dims <- tibble(
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
row.names(data_dims) <- c("Rows", "Columns")
data_dims %>% knitr::kable()
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
head(data1)
head(data2)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
data1 <- data1[, 1:9]
glimpse(data1)
data1 <- read_csv(path1)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$"County Equivalent Name"))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(`COUNTY` %in% common_counties) -> data1
data1 %>%
filter(`County` %in% common_counties) -> data1
unique(data1$`Hospital Ratings`)
data1 %>%
filter(!is.na(HospitalRating)) %>%
group_by(County, HospitalRating) %>%
summarise(count = n())
glimpse(data3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "21+Pop", "55+Pop", "60+Pop", "65+Pop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
glimpse(data3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "21andOlderPop", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
glimpse(data3)
unique(data3$`18`)
unique(data3$`21`)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "21andOlderPop", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "21andOlderPop", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "PopUnder18yo", "21andOlderPop", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "21andOlderPop", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21+", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21+", "55andOlderPop", "60andOlderPop", "65andOlderPop", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
data3$MedianAge
data3$MedianAge[data3$MedianAge == "-"]
data3$MedianAge[data3$MedianAge]
unique(data3$MedianAge)
data3$MedianAge[data3$MedianAge == '-']
data3$MedianAge[data3$MedianAge == '-'] <- NA
data3$MedianAge
data3$MedianAge <- as.numeric(data3$MedianAge)
data3$MedianAge
data3$MaleMedianAge
unique(data3$MaleMedianAge)
unique(data3$MaleMedianAge)
unique(data3$FemaleMedianAge)
unique(data3$PercUnder18yo)
unique(data3$PercFemale)
expression <- "(^\\d\\d\.\\d)."
string <- "24.5%"
expression <- "(^\\d\\d\.\\d)."
expression <- "(^\d\d\.\d)."
string <- "24.5%"
expression <- "(^\d\d\.\d)."
str_extract(string, expression)
string <- "24.5%"
expression <- "(\d{2}\.\d)"
str_extract(string, expression)
expression <- "(\\d{2}\.\\d)"
expression <- "(\\d{2}\.\\d)"
expression <- "(\\d{2}\\.\\d)"
str_extract(string, expression)
string <- "24.5%"
expression <- "(\\d{2}\\.\\d)"
str_extract(string, expression)
print(str_extract(string, expression))
print(as.numeric(str_extract(string, expression)))
as.numeric(str_extract(string, expression))
string <- "24.5%"
expression <- "(\\d{2}\\.\\d)"
as.numeric(str_extract(string, expression))
unique(data3$MaleMedianAge)
unique(data3$FemaleMedianAge)
# string <- "24.5%"
string <- "-"
expression <- "(\\d{2}\\.\\d)"
as.numeric(str_extract(string, expression))
# string <- "24.5%"
string <- NA
expression <- "(\\d{2}\\.\\d)"
as.numeric(str_extract(string, expression))
data3$MaleMedianAge[1]
for (i in seq_along(data3$MaleMedianAge)){
data3$MaleMedianAge[i] <- ifelse(str_extract(data3$MaleMedianAge[i], expression), as.numeric(str_extract(data3$MaleMedianAge[i], expression)), NA)
}
ifelse(str_extract(string, expression), as.numeric(str_extract(string, expression)), NA)
expression <- "(\\d{2}\\.\\d)"
for (i in seq_along(data3$MaleMedianAge)){
data3$MaleMedianAge[i] <- ifelse(str_extract(data3$MaleMedianAge[i], expression), as.numeric(str_extract(data3$MaleMedianAge[i], expression)), NA)
}
data3$MaleMedianAge
data3 <- read_csv(path3)
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
# `18` and `21` are entirely empty, so we will remove them. Geoid also does not contain any useful information not explained by Geography.
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
unique(data3$MedianAge)
data3$MedianAge[data3$MedianAge == '-'] <- NA
data3$MedianAge <- as.numeric(data3$MedianAge)
data3$MedianAge
data3$MaleMedianAge
data3$MaleMedianAge[data3$MaleMedianAge == '-'] <- NA
data3$MaleMedianAge <- as.numeric(data3$MaleMedianAge)
data3$FemaleMedianAge[data3$FemaleMedianAge == '-'] <- NA
data3$FemaleMedianAge <- as.numeric(data3$FemaleMedianAge)
data3$MedianAge[data3$MedianAge == '-'] <- NA
data3$MedianAge <- as.numeric(data3$MedianAge)
data3$MaleMedianAge[data3$MaleMedianAge == '-'] <- NA
data3$MaleMedianAge <- as.numeric(data3$MaleMedianAge)
data3$FemaleMedianAge[data3$FemaleMedianAge == '-'] <- NA
data3$FemaleMedianAge <- as.numeric(data3$FemaleMedianAge)
glimpse(data3)
expression <- "(\\d{2}\\.\\d)"
temp <- vector(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- ifelse(str_extract(data3$PercUnder18yo[i], expression), as.numeric(str_extract(data3$PercUnder18yo[i], expression)), NA)
}
temp <- vector(length(data3$PercUnder18yo))
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- ifelse(str_extract(data3$PercUnder18yo[i], expression), as.numeric(str_extract(data3$PercUnder18yo[i], expression)), NA)
}
temp
data3$PercUnder18yo
expression <- "(\\d{2}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- ifelse(str_extract(data3$PercUnder18yo[i], expression), as.numeric(str_extract(data3$PercUnder18yo[i], expression)), NA)
}
temp
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- str_extract(data3$PercUnder18yo[i], expression)
}
temp
data3$PercUnder18yo
temp
data3$PercUnder18yo
temp
data3$PercUnder18yo
expression <- "(\\d{1,2}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- str_extract(data3$PercUnder18yo[i], expression)
}
temp
temp
data3$PercUnder18yo
temp
as.numeric(temp)
?double
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- as.double(str_extract(data3$PercUnder18yo[i], expression))
}
temp
data3$PercUnder18yo
unique(temp)
sorted(unique(temp))
sort(unique(temp))
sort(unique(data3$PercUnder18yo))
sort(unique(temp))
sort(unique(data3$PercUnder18yo))
sort(unique(temp))
sort(unique(data3$PercUnder18yo))
length(unique(data3$PercUnder18yo))
length(unique(temp))
length(unique(data3$PercUnder18yo))
unique(temp)
unique(data3$PercUnder18yo)
unique(temp)
unique(data3$PercUnder18yo)
unique(temp)
unique(data3$PercUnder18yo)
expression <- "(\\d{1,3}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- as.double(str_extract(data3$PercUnder18yo[i], expression))
}
unique(temp)
unique(data3$PercUnder18yo)
length(unique(data3$PercUnder18yo))
length(unique(temp))
length(unique(data3$PercUnder18yo))
data3$PercUnder18yo <- temp
glimpse(data3)
temp <- double(length(data3$PercFemale))
for (i in seq_along(data3$PercFemale)){
temp[i] <- as.double(str_extract(data3$PercFemale[i], expression))
}
data3$PercFemale <- temp
glimpse(data3)
unique(data3$PercUnder18yo)[1:10]
unique(data3$AvgHouseholdMems)
unique(data3$AvgFamilyMems)
data3$AvgHouseholdMems
data3 <- read_csv(path3)
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
# tbl-cap: "Dimensions of data after cleaning"
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
