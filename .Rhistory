data2 <- read_csv(path2)
data3 <- read_csv(path3)
library(tidyverse); theme_set(theme_bw())
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\data2.csv"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_csv(path2)
data3 <- read_csv(path3)
#| tbl-cap: "Dimensions of data sets before cleaning"
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
head(data1)
head(data2)
head(data3)
# names(data1)
# names(data2)
# names(data3)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$"County Equivalent Name"))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data2 %>%
filter(`County Equivalent Name` %in% common_counties) -> data2
head(data1)
head(data2)
head(data1)
head(data2)
head(data3)
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\data2.csv"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_csv(path2)
data3 <- read_csv(path3)
head(data1)
head(data2)
head(data1)
head(data2)
head(data3)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$"County Equivalent Name"))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
head(data2)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1 %>%
filter(County %in% common_counties) -> data1
common_counties
common_counties
data1_counties
data2$counties
unique(data2$counties)
sort(unique(data2$counties))
unique(data1$County)
data1 <- read_csv(path1)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
unique(data1$County)
counties
data2$counties
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
unique(data3$MedianAge)
data3$MedianAge[data3$MedianAge == '-'] <- NA
data3$MedianAge <- as.numeric(data3$MedianAge)
data3$MaleMedianAge[data3$MaleMedianAge == '-'] <- NA
data3$MaleMedianAge <- as.numeric(data3$MaleMedianAge)
data3$FemaleMedianAge[data3$FemaleMedianAge == '-'] <- NA
data3$FemaleMedianAge <- as.numeric(data3$FemaleMedianAge)
unique(data3$PercUnder18yo)[1:10]
string <- "24.5%"
# string <- NA
expression <- "(\\d{2}\\.\\d)"
as.numeric(str_extract(string, expression))
expression <- "(\\d{1,3}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- as.double(str_extract(data3$PercUnder18yo[i], expression))
}
data3$PercUnder18yo <- temp
temp <- double(length(data3$PercFemale))
for (i in seq_along(data3$PercFemale)){
temp[i] <- as.double(str_extract(data3$PercFemale[i], expression))
}
data3$PercFemale <- temp
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
head(data1)
data1 %>%
group_by(Hospital) %>%
summarize(all_mort = sum(AdjMortRate))
data1 %>%
group_by(Hospital) %>%
summarize(all_mort = sum(AdjMortRate))
data1 %>%
group_by(Hospital) %>%
count(n())
data1 %>%
group_by(Hospital) %>%
count()
data1 %>%
group_by(County) %>%
count()
data1 %>%
group_by(County) %>%
count()
data1 %>%
group_by(County) %>%
summarize(all_mort = sum(AdjMortRate))
data1 %>%
group_by(County) %>%
summarize(all_mort = count(AdjMortRate))
sum
data1 %>%
group_by(County) %>%
summarize(all_mort = sum(AdjMortRate))
data1 %>%
group_by(County) %>%
summarize(all_mort = sum(AdjMortRate), AdjMortRate)
data1 %>%
group_by(County) %>%
summarize(all_mort =  AdjMortRate)
data1 %>%
group_by(County) %>%
summarize(all_mort = n())
data1 %>%
group_by(County) %>%
summarize(all_mort = count(Hospital))
data1 %>%
group_by(County) %>%
summarize(all_mort = count(Hospital))
unique(data1$AdjMortRate)
data1$AdjMortRate <- ifelse(data1$AdjMortRate == ".", NA, data1$AdjMortRate)
data1$AdjMortRate
unique(data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1 %>%
group_by(County) %>%
summarize(all_mort = count(Hospital))
data1 %>%
group_by(County) %>%
summarize(all_mort = count(AdjMortRate))
data1 %>%
group_by(County) %>%
summarize(all_mort = sum(AdjMortRate))
data1 %>%
group_by(County) %>%
summarize(all_mort = sum(AdjMortRate, na.rm = T))
data1 %>%
group_by(County) %>%
summarize(all_deaths = sum(Deaths, na.rm = T))
unique(data1$Deaths)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$Deaths <- ifelse(data1$Deaths == ".", NA, data1$Deaths)
data1$Deaths <- as.numeric(data1$Deaths)
data1 %>%
group_by(County) %>%
summarize(all_deaths = sum(Deaths, na.rm = T))
unique(data1$Procedure)
data1 %>%
group_by(County) %>%
filter(Procedure == :"Heart Failure")
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure")
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") -> data1_heart
library(tidyverse); theme_set(theme_bw())
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\data2.csv"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_csv(path2)
data3 <- read_csv(path3)
head(data1)
head(data2)
head(data3)
# names(data1)
# names(data2)
# names(data3)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1$AdjMortRate <- ifelse(data1$AdjMortRate == ".", NA, data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$Deaths <- ifelse(data1$Deaths == ".", NA, data1$Deaths)
data1$Deaths <- as.numeric(data1$Deaths)
unique(data1$Procedure)
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") -> data1_heart
data2 %>%
filter(`County Equivalent Name` %in% common_counties) -> data2
head(data2)
data2 %>%
filter(counties %in% common_counties) -> data2
library(tidyverse); theme_set(theme_bw())
path1 <- "Data\\2016-2021-imi-results-long-view.csv"
path2 <- "Data\\data2.csv"
path3 <- "Data\\2020census.csv"
data1 <- read_csv(path1)
data2 <- read_csv(path2)
data3 <- read_csv(path3)
head(data1)
head(data2)
head(data3)
# names(data1)
# names(data2)
# names(data3)
names(data1) <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating", "Longitude", "Latitude")
kept_cols <- c("Year", "County", "Hospital", "OSHPDID", "Procedure", "AdjMortRate", "Deaths", "Cases", "HospitalRating")
data1 <- data1[, kept_cols]
glimpse(data1)
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1$AdjMortRate <- ifelse(data1$AdjMortRate == ".", NA, data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$Deaths <- ifelse(data1$Deaths == ".", NA, data1$Deaths)
data1$Deaths <- as.numeric(data1$Deaths)
unique(data1$Procedure)
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") -> data1_heart
data2 %>%
filter(counties %in% common_counties) -> data2
names(data3) <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "AvgHouseholdMems", "AvgFamilyMems", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo", "18", "Geoid", "21")
kept_cols <- c("Geography", "TotalPop", "MalePop", "FemalePop", "MedianAge", "MaleMedianAge", "FemaleMedianAge", "Under5yoPop", "Under18yoPop", "Pop21andOlder", "Pop55andOlder", "Pop60andOlder", "Pop65andOlder", "PercFemale", "PercUnder18yo")
data3 <- data3[, kept_cols]
glimpse(data3)
unique(data3$MedianAge)
data3$MedianAge[data3$MedianAge == '-'] <- NA
data3$MedianAge <- as.numeric(data3$MedianAge)
# data3$MedianAge
data3$MaleMedianAge[data3$MaleMedianAge == '-'] <- NA
data3$MaleMedianAge <- as.numeric(data3$MaleMedianAge)
data3$FemaleMedianAge[data3$FemaleMedianAge == '-'] <- NA
data3$FemaleMedianAge <- as.numeric(data3$FemaleMedianAge)
unique(data3$PercUnder18yo)[1:10]
string <- "24.5%"
# string <- NA
expression <- "(\\d{2}\\.\\d)"
as.numeric(str_extract(string, expression))
expression <- "(\\d{1,3}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- as.double(str_extract(data3$PercUnder18yo[i], expression))
}
data3$PercUnder18yo <- temp
temp <- double(length(data3$PercFemale))
for (i in seq_along(data3$PercFemale)){
temp[i] <- as.double(str_extract(data3$PercFemale[i], expression))
}
data3$PercFemale <- temp
#| tbl-cap: "Dimensions of data sets after cleaning"
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3)
)
data_dims %>% knitr::kable()
# Goal is to have final data into a rectangular tibble with no/few NAs
class_data_final = tibble()
unique(data1$HospitalRating)
data1 %>%
filter(!is.na(HospitalRating)) %>%
group_by(County, HospitalRating) %>%
summarise(count = n())
# Goal is to have final data into a rectangular tibble with no/few NAs
reg_data_final = tibble()
write_delim(data1, ".\\Data\\data1_clean.csv". sep = ',')
write_delim(data1, ".\\Data\\data1_clean.csv", sep = ',')
write_csv(data1, ".\\Data\\data1_clean.csv")
write_csv(data2, ".\\Data\\data2_clean.csv")
write_csv(data3, ".\\Data\\data3_clean.csv")
#| eval: false
write_csv(data1, ".\\Data\\data1_clean.csv")
write_csv(data2, ".\\Data\\data2_clean.csv")
write_csv(data3, ".\\Data\\data3_clean.csv")
data1
data1_heart
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(sum())
# -> data1_heart
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(n())
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(n(Procedure))
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(sum(Procedure))
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(sum(Deaths))
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(sum(AdjMortRate))
data1 %>%
group_by(County) %>%
filter(Procedure == "Heart Failure") %>%
summarize(Total_Mort = sum(AdjMortRate), Total_Deaths = sum(Deaths))
# -> data1_heart
data1 %>%
group_by(County, HospitalRating) %>%
filter(Procedure == "Heart Failure") %>%
summarize(Total_Mort = sum(AdjMortRate), Total_Deaths = sum(Deaths))
data1_counties <- unique(data1$County)
data2_counties <- sort(unique(data2$counties))
# all(data1_counties[data1_counties %in% data2_counties] == data2_counties[data2_counties %in% data1_counties])
common_counties <- data1_counties[data1_counties %in% data2_counties]
common_counties[1:5]
data1 %>%
filter(County %in% common_counties) -> data1
data1$AdjMortRate <- ifelse(data1$AdjMortRate == ".", NA, data1$AdjMortRate)
data1$AdjMortRate <- as.numeric(data1$AdjMortRate)
data1$Deaths <- ifelse(data1$Deaths == ".", NA, data1$Deaths)
data1$Deaths <- as.numeric(data1$Deaths)
unique(data1$Procedure)
data1 %>%
group_by(County, HospitalRating) %>%
filter(Procedure == "Heart Failure") %>%
summarize(Total_Mort = sum(AdjMortRate), Total_Deaths = sum(Deaths))
# -> data1_heart
data1 %>%
group_by(County, HospitalRating) %>%
filter(Procedure == "Heart Failure") %>%
summarize(Total_Mort = sum(AdjMortRate), Total_Deaths = sum(Deaths)) -> data1_heart
data1_heart
data1_heart
#| eval: false
write_csv(data1, ".\\Data\\data1_clean.csv")
write_csv(data2, ".\\Data\\data2_clean.csv")
write_csv(data3, ".\\Data\\data3_clean.csv")
write_csv(data1_heart, ".\\Data\\data1_heart.csv")
data1_heart <- read_csv(".\\Data\\data1_heart.csv")
data1_heart
unique(data3$Geography)
# string <- NA
expression <- "(.*)\sCounty"
string <- "Alameda County"
# string <- NA
expression <- "(.*)\sCounty"
string <- "Alameda County"
# string <- NA
expression <- "(.*) County"
(str_extract(string, expression))
# string <- NA
expression <- "(.*)( County)"
(str_extract(string, expression))
(str_detect(string, expression))
(str_extract(string, expression))
(str_extract(string, expression)[2])
(str_extract(string, expression)[1])
?str_extract
(str_match(string, expression)[1])
(str_match(string, expression))
(str_match(string, expression)[1])
# string <- NA
expression <- "(.*) County"
(str_match(string, expression))
string <- "Alameda County"
# string <- NA
expression <- "(.*) County"
(str_match(string, expression))
(str_match(string, expression)[2])
string <- "Alameda County"
expression <- "(.*) County"
(str_match(string, expression)[2])
str_detect(string, expression)
string <- "Alameda City"
str_detect(string, expression)
expression <- "(.*) County"
data3$Geography[str_detect(data3$Geography, expression)]
data3[str_detect(data3$Geography, expression)]
data3[str_detect(data3$Geography, expression),]
expression <- "(.*) County"
data3[str_detect(data3$Geography, expression),]
data3_counties <- data3[str_detect(data3$Geography, expression),]
expression <- "(.*) County"
data3_counties <- data3[str_detect(data3$Geography, expression),]
head(data3_counties)
expression <- "(\\d{1,3}\\.\\d)"
temp <- double(length(data3$PercUnder18yo))
for (i in seq_along(data3$PercUnder18yo)){
temp[i] <- as.double(str_extract(data3$PercUnder18yo[i], expression))
}
data3$PercUnder18yo <- temp
temp <- double(length(data3$PercFemale))
for (i in seq_along(data3$PercFemale)){
temp[i] <- as.double(str_extract(data3$PercFemale[i], expression))
}
data3$PercFemale <- temp
expression <- "(.*) County"
data3_counties <- data3[str_detect(data3$Geography, expression),]
head(data3_counties)
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3_counties)
)
#| eval: false
write_csv(data1, ".\\Data\\data1_clean.csv")
write_csv(data2, ".\\Data\\data2_clean.csv")
write_csv(data3_counties, ".\\Data\\data3_counties.csv")
write_csv(data1_heart, ".\\Data\\data1_heart.csv")
#| tbl-cap: "Dimensions of data sets after cleaning"
data_dims <- tibble(
"Dimension" = c("Rows", "Columns"),
"Data1" = dim(data1),
"Data2" = dim(data2),
"Data3" = dim(data3_counties)
)
data_dims %>% knitr::kable()
data3_counties <- read_csv(".\\Data\\data3_counties.csv")
data3_counties
names(data3_counties)
names(data3_counties)[1] <- "County"
head(data3_counties)
write_csv(data3_counties, ".\\Data\\data3_counties.csv")
data3_counties <- read_csv(".\\Data\\data3_counties.csv")
data3_counties
data3_counties$County
str_match(data3_counties$County, expression)
str_match(data3_counties$County, expression)[,2]
data3_counties$County <- str_match(data3_counties$County, expression)[,2]
head(data3_counties)
\
write_csv(data3_counties, ".\\Data\\data3_counties.csv")
data3_counties <- read_csv(".\\Data\\data3_counties.csv")
data3_counties
data1_heart %>%
left_join(data3_counties, by = "County")
head(data13)
data1_heart %>%
left_join(data3_counties, by = "County") -> data13
head(data13)
